from itertools import count
class Node:
    def __init__(self,value):
        self.value=value
        self.left=None
        self.right=None
    def insert(self,value):
        if not self:
            self.value=value
        elif self.value>value:
            if self.left:
                self.left.insert(value)
            else:
                self.left=Node(value)
        elif self.value<value:
            if self.right:
                self.right.insert(value)
            else:
                self.right=Node(value)
        else:
            print("Duplication Not allowed")
    def inorder(self):
        if self:
            if self.left:
                self.left.inorder()
            print(self.value)
            if self.right:
                self.right.inorder()
    def lvl_trav_rev(self):
        if self:
            stack=[]
            queue=[]
            queue.append(self)
            while queue:
               s=queue.pop(0)
               stack.append(s)
               if s.right:
                  queue.append(s.right)
               if s.left:
                  queue.append(s.left)
            while stack:
                print(stack.pop(-1).value)
    def height(self):
        if self:
            queue=[]
            nodeno=0
            queue.append(self)
            count=0
            while True:
                nodeno=len(queue)
                if nodeno==0:
                    print(count)
                    return
                else:
                    count=count+1
                while nodeno>0:
                    s=queue[0]
                    if s.left:
                        queue.append(s.left)
                    if s.right:
                        queue.append(s.right)
                    queue.pop(0)
                    nodeno=nodeno-1

if __name__=="__main__":
    node=Node(12)
    node.insert(5)
    node.insert(7)
    node.insert(1)
    node.insert(2)
    node.insert(0)
    node.insert(22)
    node.insert(25)
    node.insert(28)
    node.insert(24)
    node.insert(14)
    print("The inorder traversal of the node is:")
    node.inorder()
    print("The reverse level order traversal of the node is:")
    node.lvl_trav_rev()
    print("The height of the tree is:")
    node.height()