class Node:
   def __init__(self,value):
      self.value=value
      self.left=None
      self.right=None
   def insert(self,value):
      if not self:
        self.value=value
      elif self.value>value:
        if self.left:
           self.left.insert(value)
        else:
           self.left=Node(value)
      elif self.value<value:
        if self.right:
           self.right.insert(value)
        else:
           self.right=Node(value)

def height(root):
   i=0
   j=0
   if not root:
      return 0
   else:
     i=height(root.left)
     j=height(root.right)
   if i>j:
     return i+1
   else:
     return j+1
 
def inorder(root):
     if root:
         inorder(root.left)
         print(root.value)
         inorder(root.right)


def lvl_view(root):
    h=height(root)
    l=[]
    for i in range(1,h+1):
      lvl(root,i,l)
      print(l[-1])
      l[:]=[]
 

def lvl(root,height,l):
  if root==None:
      return
  elif height==1:
     l.append(root.value)
  else:
       lvl(root.left,height-1,l)
       lvl(root.right,height-1,l)


if __name__=="__main__":
   node=Node(12)
   node.insert(5)
   node.insert(3)
   node.insert(7)
   node.insert(21)
   node.insert(16)
   node.insert(14)
   node.insert(13)
   node.insert(11)
   print("In order traversal")
   inorder(node)
   print("Level order traversal")
   lvl_view(node)