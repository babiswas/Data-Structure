class Node:
    def __init__(self,value):
        self.value=value
        self.left=None
        self.right=None
    def spiral_trav(self):
        if self:
            stack1=[]
            stack2=[]
            stack1.append(self)
            while stack1 or stack2:
                while stack1:
                    s=stack1.pop(-1)
                    print(s.value)
                    if s.left:
                        stack2.append(s.left)
                    if s.right:
                        stack2.append(s.right)
                while stack2:
                    s=stack2.pop(-1)
                    print(s.value)
                    if s.right:
                        stack1.append(s.right)
                    if s.left:
                        stack1.append(s.left)
    def insert(self,value):
        if not self:
            self.value=value
        elif self.value>value:
            if self.left:
                self.left.insert(value)
            else:
                self.left=Node(value)
        elif self.value<value:
            if self.right:
                self.right.insert(value)
            else:
                self.right=Node(value)
        else:
            print("Duplicate not allowed")
            
    def inorder(self):
        if self:
            if self.left:
                self.left.inorder()
            print(self.value)
            if self.right:
                self.right.inorder()
        

if __name__=="__main__":
    node=Node(12)
    node.insert(5)
    node.insert(7)
    node.insert(1)
    node.insert(2)
    node.insert(0)
    node.insert(22)
    node.insert(14)
    node.insert(25)
    node.insert(24)
    node.insert(28)
    print("Inorder traversal of the Tree")
    node.inorder()
    print("Spiral order traversal of the tree")
    node.spiral_trav()
    
                    
                



    
        
    
    
    

    



